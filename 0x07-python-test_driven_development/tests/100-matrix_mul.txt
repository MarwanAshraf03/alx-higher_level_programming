``100-matrix_mul`` module
========================

Using ``matrix_mul``
---------------------

>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

>>> matrix_mul()
Traceback (most recent call last):
...
TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

>>> matrix_mul("", "")
Traceback (most recent call last):
...
TypeError: m_a must be a list

>>> matrix_mul(None, None)
Traceback (most recent call last):
...
TypeError: m_a must be a list

>>> matrix_mul([])
Traceback (most recent call last):
...
TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

>>> matrix_mul([], "")
Traceback (most recent call last):
...
TypeError: m_b must be a list

>>> matrix_mul([], [])
Traceback (most recent call last):
...
ValueError: m_a can't be empty

>>> matrix_mul([1], [])
Traceback (most recent call last):
...
TypeError: m_a must be a list of lists

>>> matrix_mul([[]], [])
Traceback (most recent call last):
...
ValueError: m_a can't be empty

>>> matrix_mul([[]], [[]])
Traceback (most recent call last):
...
ValueError: m_a can't be empty

>>> matrix_mul([["1"]], [])
Traceback (most recent call last):
...
ValueError: m_b can't be empty

>>> matrix_mul([["1"]], [1])
Traceback (most recent call last):
...
TypeError: m_b must be a list of lists

>>> matrix_mul([["1"]], [[]])
Traceback (most recent call last):
...
ValueError: m_b can't be empty

>>> matrix_mul([["1"]], [["1"]])
Traceback (most recent call last):
...
TypeError: m_a should contain only integers or floats

>>> matrix_mul([[1]], [["1"]])
Traceback (most recent call last):
...
TypeError: m_b should contain only integers or floats

>>> matrix_mul([[1]], [[1]])
[[1]]

>>> matrix_mul([[], [1]], [[1]])
Traceback (most recent call last):
...
ValueError: m_a can't be empty

>>> matrix_mul([[1], ["1"]], [[1]])
Traceback (most recent call last):
...
TypeError: m_a should contain only integers or floats

>>> matrix_mul([[1]], [[1], ["1"]])
Traceback (most recent call last):
...
TypeError: m_b should contain only integers or floats

>>> matrix_mul([[1], [1]], [[1]])
[[1], [1]]

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

>>> mat1 = [[1, 2, 3, 4],[5, 6, 7, 8],[9, 1, 2, 3]]

>>> mat2 = [[1, 2],[1, 2],[1, 2],[1, 2]]

>>> mat3 = [[1, 2],[1, 2, 3],[1],[1, 4, 6, 2]]

>>> matrix_mul(mat2, mat1)
Traceback (most recent call last):
...
ValueError: m_a and m_b can't be multiplied

>>> matrix_mul(mat1, mat2)
[[10, 20], [26, 52], [15, 30]]

>>> matrix_mul(mat3, mat2)
Traceback (most recent call last):
...
TypeError: each row of m_a must be of the same size

>>> matrix_mul(mat2, mat3)
Traceback (most recent call last):
...
TypeError: each row of m_b must be of the same size